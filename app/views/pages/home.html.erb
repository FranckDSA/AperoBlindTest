<%= simple_form_for :player, url: players_path, defaults: {label: false} do |f| %>
  <%= f.input :game_pin_entered %>
  <%= f.input :user_name %>
  <%= f.submit "Enter the Game!", class: "" %>
<% end %>


<%= link_to "Create a new game", omniauth_authorize_path(:user, :spotify) %>

<html>
<head>
  <title>Spotify Web Playback SDK Quick Start Tutorial</title>
</head>
<body>
  <h1>APERO BLIND TEST</h1>
  <button type="button" class="btn btn-primary" id="pause">Pause</button>
  <button type="button" class="btn btn-primary" id="resume">Resume</button>
  <button type="button" class="btn btn-primary" id="nexttrack">Next track</button>
  <script src="https://sdk.scdn.co/spotify-player.js"></script>
  <script>
    window.onSpotifyWebPlaybackSDKReady = () => {
      const token = '<%= current_user.token %>';
      const player = new Spotify.Player({
        name: 'AperoBlindTests',
        getOAuthToken: cb => { cb(token);}
      });

      // Error handling
      player.addListener('initialization_error', ({ message }) => { console.error(message); });
      player.addListener('authentication_error', ({ message }) => { console.error(message); });
      player.addListener('account_error', ({ message }) => { console.error(message); });
      player.addListener('playback_error', ({ message }) => { console.error(message); });

      // Playback status updates
      player.addListener('player_state_changed', state => { console.log(state); });

      // Ready
      player.addListener('ready', ({ device_id }) => {
        console.log('Ready with Device ID', device_id);
        play({
          playerInstance: player,
          spotify_uri: 'spotify:track:34FbkFgAbv4ffvhL2XQMVm',
        });

      });

      // Not Ready
      player.addListener('not_ready', ({ device_id }) => {
        console.log('Device ID has gone offline', device_id);
      });

      // Connect to the player!
      player.connect();


      const play = ({
        spotify_uri,
        playerInstance: {
          _options: {
            getOAuthToken,
            id
          }
        }
      }) => {
        getOAuthToken(access_token => {
          fetch(`https://api.spotify.com/v1/me/player/play?device_id=${id}`, {
            method: 'PUT',
            body: JSON.stringify({ uris: [spotify_uri] }),
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${access_token}`
            },
          });
        });
      };

      const button_pause = document.querySelector('#pause');
      button_pause.addEventListener('click', () => {
        player.pause().then(() => {
          console.log('Paused!');
        });
      });

      const button_resume = document.querySelector('#resume');
      button_resume.addEventListener('click', () => {
        player.resume().then(() => {
          console.log('Resumed!');
        });
      });

      const button_nexttrack = document.querySelector('#nexttrack');
      button_nexttrack.addEventListener('click', () => {
        player.nextTrack().then(() => {
          console.log('Skipped to next track!');
        });
      });

};
  </script>


